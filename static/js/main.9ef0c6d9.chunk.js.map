{"version":3,"sources":["components/Page.js","components/Logo.js","components/Motto.js","components/Social.js","components/Markdown.js","components/HeroBanner.js","components/Button.js","components/GetStarted.js","components/GithubAnchor.js","components/FacebookAnchor.js","App.js","serviceWorker.js","index.js","images/logo.png","SNIPPETS.md"],"names":["Page","styled","div","StyledLogo","Logo","src","logo","alt","StyledMotto","Line","span","Motto","StyledSocial","SocialIcon","StyledMarkdown","Markdown","useState","snippets","setSnippets","useEffect","a","fetch","snippetsPath","text","Prism","highlightAll","source","HeroHeader","Button","button","StyledGetStarted","Buttons","GetStarted","to","smooth","target","rel","href","role","aria-label","className","style","textShadow","StyledGithubAnchor","GithubAnchor","focusable","aria-hidden","viewBox","xmlns","d","StyledFacebookAnchor","FacebookLogo","FacebookAnchor","App","Social","HeroBanner","name","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"+ZAEA,IAUeA,EAVFC,IAAOC,IAAV,K,2HCGV,IAAMC,EAAaF,IAAOC,IAAV,KAYDE,EANF,kBACX,kBAACD,EAAD,KACE,yBAAKE,IAAKC,IAAMC,IAAI,kB,6ZCVxB,IAAMC,EAAcP,IAAOC,IAAV,KAOXO,EAAOR,IAAOS,KAAV,KAsBKC,EAND,kBACZ,kBAACH,EAAD,KACE,kBAACC,EAAD,kC,uWCzBJ,IAAMG,EAAeX,IAAOC,IAAV,KAULW,EAAaZ,IAAOC,IAAV,KASRU,I,+SCbf,IAAME,EAAiBb,IAAOC,IAAV,KA6BLa,EAnBE,WAAO,IAAD,EACWC,mBAAS,MADpB,mBACdC,EADc,KACJC,EADI,KAYrB,OATAC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,sEACwBC,MAAMC,KAD9B,cACOL,EADP,gBAEoBA,EAASM,OAF7B,OAEOA,EAFP,OAGCL,EAAYK,GACZC,IAAMC,eAJP,0CAAD,KAMC,IAGD,kBAACX,EAAD,KACE,kBAAC,IAAD,CAAeY,OAAQT,M,iTC/B7B,IAYeU,EAZI1B,IAAOC,IAAV,K,seCAhB,IAkBe0B,EAlBA3B,IAAO4B,OAAV,K,yXCIZ,IAAMC,EAAmB7B,IAAOC,IAAV,KAUhB6B,EAAU9B,IAAOC,IAAV,KA+BE8B,EAzBI,kBACjB,kBAACF,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,OAAD,CAAaE,GAAG,WAAWC,QAAM,GAC/B,kBAAC,EAAD,qBAEF,uBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,qDAEL,kBAAC,EAAD,iBAGJ,0BACEC,KAAK,MACLC,aAAW,cACXC,UAAU,gCACVC,MAAO,CAAEC,WAAY,6CAJvB,kB,gJC/BJ,IAAMC,EAAqB1C,YAAOY,EAAPZ,CAAH,KA0BT2C,EAnBM,kBACnB,kBAACD,EAAD,KACE,uBACER,OAAO,SACPC,IAAI,sBACJC,KAAK,qDAEL,yBACEQ,UAAU,QACVC,cAAY,OACZC,QAAQ,cACRC,MAAM,8BAEN,0BAAMC,EAAE,iyC,gJCpBhB,IAAMC,EAAuBjD,YAAOY,EAAPZ,CAAH,KAOpBkD,GAAe,kBACnB,yBAAKJ,QAAQ,YAAYC,MAAM,8BAC7B,0BAAMC,EAAE,uIAgBGG,GAZQ,kBACrB,kBAACF,EAAD,KACE,uBACEf,OAAO,SACPC,IAAI,sBACJC,KAAK,uCAEL,kBAAC,GAAD,S,OCWSgB,OArBf,WACE,OACE,yBAAKb,UAAU,OACb,kBAACc,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,OAEF,kBAACC,EAAD,CAAYf,UAAU,mBACpB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,UAAD,CAAgBgB,KAAK,YACnB,kBAAC,EAAD,KACE,kBAAC,EAAD,UCjBUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.9ef0c6d9.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Page = styled.div`\n  padding: 4rem;\n  min-height: 100vh;\n  background-color: gainsboro;\n\n  @media (max-width: 768px) {\n    padding: 2rem;\n  }\n`;\n\nexport default Page;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport logo from 'images/logo.png';\n\nconst StyledLogo = styled.div`\n  img {\n    display: block;\n  }\n`;\n\nconst Logo = () => (\n  <StyledLogo>\n    <img src={logo} alt=\"JS snippets\" />\n  </StyledLogo>\n);\n\nexport default Logo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledMotto = styled.div`\n  margin-top: 2rem;\n  font-size: 1.5rem;\n  text-align: center;\n  letter-spacing: 0.5rem;\n`;\n\nconst Line = styled.span`\n  transition: font-size 0.5s;\n\n  &::before {\n    content: '< ';\n  }\n\n  &::after {\n    content: ' />';\n  }\n\n  @media (max-width: 768px) {\n    font-size: 1.25rem;\n  }\n`;\n\nconst Motto = () => (\n  <StyledMotto>\n    <Line>Improve your JavaScript</Line>\n  </StyledMotto>\n);\n\nexport default Motto;\n","// import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSocial = styled.div`\n  top: 1rem;\n  z-index: 1;\n  right: 1rem;\n  display: grid;\n  grid-gap: 0.5rem;\n  position: absolute;\n  grid-auto-flow: column;\n`;\n\nexport const SocialIcon = styled.div`\n  opacity: 0.5;\n  transition: opacity 0.5s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport default StyledSocial;\n","import Prism from 'prismjs';\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport React, { useState, useEffect } from 'react';\n\nimport snippetsPath from 'SNIPPETS.md';\n\nimport 'prismjs/themes/prism-tomorrow.css';\n\nconst StyledMarkdown = styled.div`\n  margin: auto;\n  overflow: hidden;\n\n  :not(pre) > code[class*='language-'],\n  pre[class*='language-'] {\n    border-radius: 1rem;\n  }\n`;\n\nconst Markdown = () => {\n  const [snippets, setSnippets] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      const snippets = await fetch(snippetsPath);\n      const text = await snippets.text();\n      setSnippets(text);\n      Prism.highlightAll();\n    })();\n  }, []);\n\n  return (\n    <StyledMarkdown>\n      <ReactMarkdown source={snippets} />\n    </StyledMarkdown>\n  );\n};\n\nexport default Markdown;\n","import styled from 'styled-components';\n\nconst HeroHeader = styled.div`\n  display: flex;\n  height: 100vh;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  background-color: gainsboro;\n  color: var(--color-fore-background);\n`;\n\nexport default HeroHeader;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  min-width: 10rem;\n  font-size: 1.25rem;\n  margin-bottom: 3rem;\n  border-radius: 2rem;\n  padding: 0.5rem 1.5rem;\n  background-color: transparent;\n  font-family: var(--font-family);\n  transition: background-color 0.5s;\n  color: var(--color-fore-background);\n  border: 0.125rem solid var(--color-fore-background);\n\n  &:hover {\n    color: white;\n    background-color: var(--color-fore-background);\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as Scroll from 'react-scroll';\n\nimport Button from 'components/Button';\n\nconst StyledGetStarted = styled.div`\n  display: flex;\n  font-size: 1.5rem;\n  margin-top: 4rem;\n  text-align: center;\n  flex-direction: column;\n  letter-spacing: 0.05rem;\n  text-transform: uppercase;\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  grid-gap: 0.5rem;\n  grid-auto-flow: column;\n`;\n\nconst GetStarted = () => (\n  <StyledGetStarted>\n    <Buttons>\n      <Scroll.Link to=\"markdown\" smooth>\n        <Button>Get started</Button>\n      </Scroll.Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/JSsnippets/JavaScript-snippets\"\n      >\n        <Button>GitHub</Button>\n      </a>\n    </Buttons>\n    <span\n      role=\"img\"\n      aria-label=\"Get Started\"\n      className=\"animated bounce infinite slow\"\n      style={{ textShadow: '0.5rem 0.5rem 0.5rem rgba(0, 0, 0, 0.25)' }}\n    >\n      ðŸ‘‡\n    </span>\n  </StyledGetStarted>\n);\n\nexport default GetStarted;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { SocialIcon } from './Social';\n\nconst StyledGithubAnchor = styled(SocialIcon)`\n  svg {\n    width: 2rem;\n    fill: var(--color-fore-background);\n  }\n`;\n\nconst GithubAnchor = () => (\n  <StyledGithubAnchor>\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://github.com/JSsnippets/JavaScript-snippets\"\n    >\n      <svg\n        focusable=\"false\"\n        aria-hidden=\"true\"\n        viewBox=\"0 0 496 512\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"></path>\n      </svg>\n    </a>\n  </StyledGithubAnchor>\n);\n\nexport default GithubAnchor;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { SocialIcon } from './Social';\n\nconst StyledFacebookAnchor = styled(SocialIcon)`\n  svg {\n    width: 2rem;\n    fill: var(--color-fore-background);\n  }\n`;\n\nconst FacebookLogo = () => (\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\" />\n  </svg>\n);\n\nconst FacebookAnchor = () => (\n  <StyledFacebookAnchor>\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://www.facebook.com/snippetsJS\"\n    >\n      <FacebookLogo />\n    </a>\n  </StyledFacebookAnchor>\n);\n\nexport default FacebookAnchor;\n","import React from 'react';\nimport * as Scroll from 'react-scroll';\n\nimport Page from 'components/Page';\nimport Logo from 'components/Logo';\nimport Motto from 'components/Motto';\nimport Social from 'components/Social';\nimport Markdown from 'components/Markdown';\nimport HeroBanner from 'components/HeroBanner';\nimport GetStarted from 'components/GetStarted';\nimport GithubAnchor from 'components/GithubAnchor';\nimport FacebookAnchor from 'components/FacebookAnchor';\n\nimport 'animate.css/animate.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Social>\n        <FacebookAnchor />\n        <GithubAnchor />\n      </Social>\n      <HeroBanner className=\"animated fadeIn\">\n        <Logo />\n        <Motto />\n        <GetStarted />\n      </HeroBanner>\n      <Scroll.Element name=\"markdown\">\n        <Page>\n          <Markdown />\n        </Page>\n      </Scroll.Element>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3e58526b.png\";","module.exports = __webpack_public_path__ + \"static/media/SNIPPETS.7c8c2b08.md\";"],"sourceRoot":""}